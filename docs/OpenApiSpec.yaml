openapi: 3.0.3
info:
  title: Job Management Admin Interface API
  description: API for managing job postings
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Development server
paths:
  /jobs:
    get:
      summary: Get all jobs with filtering and pagination
      operationId: getAllJobs
      parameters:
        - name: title
          in: query
          schema:
            type: string
          description: Filter by job title
        - name: location
          in: query
          schema:
            type: string
          description: Filter by location
        - name: jobType
          in: query
          schema:
            type: string
            enum: [FullTime, PartTime, Contract, Internship]
          description: Filter by job type
        - name: minSalary
          in: query
          schema:
            type: number
          description: Filter by minimum salary
        - name: maxSalary
          in: query
          schema:
            type: number
          description: Filter by maximum salary
        - name: cursor
          in: query
          schema:
            type: string
          description: Cursor for pagination
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: Number of items to return
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [salary, experience, createdAt]
            default: createdAt
          description: Sort field
        - name: sortDirection
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: Sort direction
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  nextCursor:
                    type: string
                    description: Cursor for the next page
                  hasMore:
                    type: boolean
    post:
      summary: Create a new job
      operationId: createJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
        required: true
      responses:
        '201':
          description: Job created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
  /jobs/{id}:
    get:
      summary: Get job by ID
      operationId: getJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Job not found
    put:
      summary: Update job
      operationId: updateJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRequest'
        required: true
      responses:
        '200':
          description: Job updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Job not found
    delete:
      summary: Delete job
      operationId: deleteJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Job deleted successfully
        '404':
          description: Job not found
components:
  schemas:
    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        companyName:
          type: string
        location:
          type: string
        jobType:
          type: string
          enum: [FullTime, PartTime, Contract, Internship]
        minSalary:
          type: number
        maxSalary:
          type: number
        description:
          type: string
        requirements:
          type: string
        responsibilities:
          type: string
        applicationDeadline:
          type: string
          format: date
        isRemote:
          type: boolean
        experienceYears:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - companyName
        - location
        - jobType
        - description
    JobRequest:
      type: object
      properties:
        title:
          type: string
        companyName:
          type: string
        location:
          type: string
        jobType:
          type: string
          enum: [FullTime, PartTime, Contract, Internship]
        minSalary:
          type: number
        maxSalary:
          type: number
        description:
          type: string
        requirements:
          type: string
        responsibilities:
          type: string
        applicationDeadline:
          type: string
          format: date
        isRemote:
          type: boolean
        experienceYears:
          type: integer
      required:
        - title
        - companyName
        - location
        - jobType
        - description